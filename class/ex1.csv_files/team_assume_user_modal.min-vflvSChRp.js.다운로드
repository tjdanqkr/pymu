define(["require","exports","tslib","react","modules/core/i18n","modules/clean/teams/admin/modals/action_utility_modal","modules/clean/components/modals/show_modal","modules/clean/teams/admin/modals/modal_ajax","modules/clean/react_format","modules/core/browser","spectrum/button","modules/clean/rondo/forms/index","modules/clean/react/css"],(function(e,t,i,n,a,o,s,r,d,l,m,u,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n=i.__importDefault(n),l=i.__importStar(l);t.NOTIFICATION_MODE_ASSUMED_MEMBER="member",t.NOTIFICATION_MODE_ALL_TEAM_ADMINS="admins",t._getNotificationModeInitState=function(e){return e?t.NOTIFICATION_MODE_ALL_TEAM_ADMINS:t.NOTIFICATION_MODE_ASSUMED_MEMBER};var _=(function(e){function s(o){var s=e.call(this,o)||this;return s._getAssumeModalBody=function(){return n.default.createElement("div",{className:"team-assume-user-modal"},s._getNotificationOptionText()," ",a._("All actions you perform while signed in as %(name)s will be recorded in the activity log.").format({name:s.props.displayName})+" ",s._shouldShowSettingsModalLink()&&n.default.createElement("button",{className:"button-as-href",id:"assume_change_settings",onClick:s._goToSettings},a._("Change notification settings")),n.default.createElement("div",{className:"member-page-settings-notification"},d.reactFormat(a._("<b>Note:</b> %(firstname)s’s settings can only be changed in the <a>members page.</a>"),{a:n.default.createElement("a",{href:"/team/admin/members/member?id="+s.props.userId}),b:n.default.createElement("span",{className:"bold-text"}),firstname:s.props.firstName})))},s._goToSettings=function(){s.setState({isSettingsPage:!0,currNotificationMode:s.props.notificationMode.fieldValue})},s._goToAssumeUser=function(){s.setState({isSettingsPage:!1,currNotificationMode:s.props.notificationMode.fieldValue})},s._clearSettingsAndGoToAssumeUser=function(){s.props.notificationMode.fieldValue=s.state.currNotificationMode,s._goToAssumeUser()},s._getNotificationOptionText=function(){return s._isSingleAdminWithNoMemberNotification()?a._("A record will be made in the activity log that you have signed in to %(name)s’s account.").format({name:s.props.displayName}):n.default.createElement("span",null,s._getWillBeNotifiedText(s._getNotificantDisplayName()))},s._isSingleAdminWithNoMemberNotification=function(){return!s._hasAdditionalAdmins()&&s.props.notificationMode.fieldValue!==t.NOTIFICATION_MODE_ASSUMED_MEMBER},s._hasAdditionalAdmins=function(){return s.props.shouldNotifyAdmins},s._getNotificantDisplayName=function(){switch(s.props.notificationMode.fieldValue){case t.NOTIFICATION_MODE_ASSUMED_MEMBER:return s.props.displayName+" ";case t.NOTIFICATION_MODE_ALL_TEAM_ADMINS:return"All team admins ";default:return"Nobody "}},s._getWillBeNotifiedText=function(e){switch(s.props.notificationMode.fieldValue){case t.NOTIFICATION_MODE_ASSUMED_MEMBER:return d.reactFormat(a._("<b>%(name)s</b> will be notified that you’ve signed in to their account."),{b:n.default.createElement("span",{className:"bold-text"}),name:e});default:return d.reactFormat(a._("<b>%(name)s</b> will be notified that you’ve signed in to %(assume_name)s’s account."),{b:n.default.createElement("span",{className:"bold-text"}),name:e,assume_name:s.props.displayName})}},s._shouldShowSettingsModalLink=function(){return!s.props.isUserSuspended||s._hasAdditionalAdmins()},s._getSettingsModalBody=function(){return n.default.createElement("div",{className:"team-assume-user-modal"},s._renderSettingPhrase(),s._renderSettingsOptions())},s._renderSettingsOptions=function(){return n.default.createElement("div",{className:"settings-selection"},n.default.createElement("div",null,n.default.createElement(u.RadioButton,i.__assign({value:t.NOTIFICATION_MODE_ASSUMED_MEMBER,name:"notificationMode",disabled:s.props.isUserSuspended},s.props.notificationMode),s._radioButtonTextNotificationAssumedMembmer())),n.default.createElement("div",null,n.default.createElement(u.RadioButton,i.__assign({value:t.NOTIFICATION_MODE_ALL_TEAM_ADMINS,name:"notificationMode"},s.props.notificationMode),s._radioButtonTextNotificationAllTeamAdmins())))},s._renderSettingPhrase=function(){return n.default.createElement("div",null,s._hasAdditionalAdmins()?a._("Who should be notified when you sign in to this member’s account? They will receive an email stating that you signed in as %(display_name)s.").format({display_name:s.props.displayName}):a._("Where should a record be made when you sign in to this member’s account? If your choice is the member, they will receive an email stating that you signed into their account."),n.default.createElement("a",{className:"textual-button",id:"assume_learn_more",href:"/help/9185",target:"blank",rel:"noreferrer"},a._("Learn more")))},s.state={isSettingsPage:!1,currNotificationMode:t._getNotificationModeInitState(s.props.isUserSuspended)},s}return i.__extends(s,e),s.prototype._radioButtonTextNotificationAssumedMembmer=function(){return a._("The member and activity log (recommended)",{comment:"When selecting this radio button, the team member whose Dropbox account is assumed will receive a notification email"})},s.prototype._radioButtonTextNotificationAllTeamAdmins=function(){return this._hasAdditionalAdmins()?a._("All team admins and activity log",{comment:"When selecting this radio button, all the team administrators on the team of the team member whose account is assumed will receive an email notification"}):a._("Team activity log only",{comment:"When selecting this radio button, there will be no notification and the only documentation wouldbe in the team activity log"})},s.prototype._settingsActionButton=function(){return n.default.createElement(m.Button,{onClick:this._goToAssumeUser},a._("Save settings"))},s.prototype._settingsCancelButton=function(){return n.default.createElement(m.Button,{variant:"secondary",onClick:this._clearSettingsAndGoToAssumeUser},a._("Cancel"))},s.prototype.render=function(){var e=this,t=this.props,i=t.displayName,s=t.onPrimaryAction,r=t.onSecondaryAction,d=t.onRequestClose,l=this.state.isSettingsPage,m=l?a._("Sign in as member settings"):a._("Sign in as %(name)s?").format({name:i}),u=l?this._getSettingsModalBody():this._getAssumeModalBody(),c=l?function(){return e._settingsActionButton()}:a._("Sign in"),_=l?function(){return e._settingsCancelButton()}:a._("Cancel");return n.default.createElement(o.ActionUtilityModal,{title:m,id:"team-assume-user-modal",primaryAction:c,secondaryAction:_,onPrimaryAction:s,onSecondaryAction:r,onRequestClose:d},u)},s})(n.default.Component);t.TeamAssumeUserModal=c.requireCssWithComponent(_,["/static/css/team_assume_user_modal-vflqfLhJ1.css"]),t.ASSUME_TEAM_USER_URL="/team/admin/assume_user",t.TeamAssumeUserModalApp=function(e){var n=e.displayName,a=e.firstName,o=e.userId,s=e.isUserSuspended,d=e.shouldNotifyAdmins,m=i.__rest(e,["displayName","firstName","userId","isUserSuspended","shouldNotifyAdmins"]);return r.modalAjax({modal:t.TeamAssumeUserModal,ajax:{url:t.ASSUME_TEAM_USER_URL,data:function(e){var t=e.notificationMode;return{user_id:o,notification_mode:t,return_url:l.get_href()}}},fields:{notificationMode:{fieldValue:t._getNotificationModeInitState(s)}}})(i.__assign({displayName:n,firstName:a,userId:o,isUserSuspended:s,shouldNotifyAdmins:d},m))},t.showTeamAssumeUserModal=function(e){return s.showModal(n.default.createElement(t.TeamAssumeUserModalApp,i.__assign({},e)))}}));
//# sourceMappingURL=team_assume_user_modal.min.js-vflrTJfEW.map